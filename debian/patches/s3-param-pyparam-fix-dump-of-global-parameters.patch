From ca5c33459a73d9d53cbf46462ee1dd2bd68a6d7e Mon Sep 17 00:00:00 2001
From: Andrew Walker <awalker@ixsystems.com>
Date: Sat, 21 Nov 2020 06:13:22 -0500
Subject: [PATCH] s3:param:pyparam - fix dump of global parameters

Dump of global parameters through pyparam when we pass through
an s3param loadparm context causes the defaults to not be
properly initialized, this results in the python binding dumping
all ~470 global parameters in their full glory.
---
 source3/param/loadparm.c | 2 +-
 source3/param/pyparam.c  | 1 +
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/source3/param/loadparm.c b/source3/param/loadparm.c
index 31edfa50670..921b708c7e6 100644
--- a/source3/param/loadparm.c
+++ b/source3/param/loadparm.c
@@ -3049,7 +3049,7 @@ void lp_killservice(int iServiceIn)
  changed (ie. non-default) parameters.
 ***************************************************************************/
 
-static void lp_save_defaults(void)
+void lp_save_defaults(void)
 {
 	int i;
 	struct parmlist_entry * parm;
diff --git a/source3/param/pyparam.c b/source3/param/pyparam.c
index 749cfe308f4..4d580c8f514 100644
--- a/source3/param/pyparam.c
+++ b/source3/param/pyparam.c
@@ -48,6 +48,7 @@ static PyObject *py_get_context(PyObject *self, PyObject *Py_UNUSED(ignored))
 		PyErr_NoMemory();
 		return NULL;
 	}
+	lp_save_defaults();
 
 	py_loadparm = pytalloc_steal(loadparm_Type, discard_const_p(struct loadparm_context, s4_context));
 	if (py_loadparm == NULL) {
-- 
2.28.0

